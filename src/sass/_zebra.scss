/* Import the Zebra settings partial */
@import "zebra-settings";



/****************/
/* SIMPLE RESET */
/****************/
@if $zeb-enable-simple-reset {
    /* Add box-sizing to columns to allow for padding to be easily added */
    @for $i from 1 through 9 {
        [class*='col--#{$i}'] {
            box-sizing: border-box;
        }
    }
    .col--auto {
        box-sizing: border-box;
    }
    /* Remove white space from page edges */
    body {
        margin: 0;
    }
    /* Make images responsive to their containers */
    img {
        max-width: 100%;
        height: auto;
        border: 0;
    }
}



/**********************/
/* ADDITIONAL CLASSES */
/**********************/
.site-wrapper {
    display: block;
    max-width: $zeb-site-width;
    margin: 0 auto;
}
.clearfix {
    &:after {
        content: "";
        display: block;
        clear: both;
    }
}
.hidden {
    display: none;
}

/**************************/
/* ROWS AND ROW MODIFIERS */
/**************************/
.row {
    margin: 0 auto;
    font-size: 0;
    &--contained {
        max-width: $zeb-site-width;
    }
    &--flex {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        &-left {
            justify-content: flex-start;
        }
        &-center {
            justify-content: center;
        }
        &-right {
            justify-content: flex-end;
        }
        /* Stretch columns can make use of flex to help fill any remaining gaps */
        .col {
            &--stretch {
                flex: 1 1 auto;
            }
        }
    }
}



/**********************/
/* COLUMN BASE STYLES */
/**********************/
@for $i from 1 through 9 {
    [class*='col--#{$i}'] {
        display: inline-block;
        vertical-align: top;
        /* If enabled, a font size will be applied to columns which will counter the 'font-size: 0' fix that is used on .rows */
        /* The font size that is applied can be altered in settings */
        @if $zeb-enable-reset-font {
            font-size: $zeb-reset-font-size;
        }
    }
}



/************/
/* COLUMNS */
/***********/
.col {
    /* COLUMN SIZES */
    @each $column-count in $zeb-columns {
        @for $span from 1 through $column-count {
            &--#{$span}#{$zeb-format--col}#{$column-count} {
                width: percentage($span/$column-count);
            }
        }
    }
    @if $zeb-enable-offset {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--offset-#{$span}-#{$column-count} {
                    margin-left: percentage($span/$column-count);
                }
            }
        }
    }
    @if $zeb-enable-push {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--push-#{$span}-#{$column-count} {
                    position: relative;
                    left: percentage($span/$column-count);
                }
            }
        }
    }
    @if $zeb-enable-pull {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--pull-#{$span}-#{$column-count} {
                    position: relative;
                    right: percentage($span/$column-count);
                }
            }
        }
    }
    &--auto {
        position: relative;
        display: inline-block;
        vertical-align: top;
        width: auto;
        @if $zeb-enable-reset-font {
            font-size: $zeb-reset-font-size;
        }
    }
    /* COLUMN MODIFIERS */
    &--left {
        float: left;
    }
    &--right {
        float: right;
    }
    &--flex {
        &-col {
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            > * {
                flex-grow: 1;
            }
            > .row {
                margin: 0;
            }
        }
        &-row {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            > * {
                flex-grow: 1;
            }
        }
    }
    &--align {
        &-top {
            vertical-align: top;
        }
        &-middle {
            vertical-align: middle;
        }
        &-bottom {
            vertical-align: bottom;
        }
    }
}

.bg {
    &--extend {
        position: relative;
        &:before, &:after {
            content: "";
            position: absolute;
            top: 0;
            width: $zeb-site-width;
            height: 100%;
            background: inherit;
        }
        &:before {
            right: 100%;
        }
        &:after {
            left: 100%;
        }
        &-left, &-right {
            position: relative;
        }
        &-left {
            background-position: left top;
            &:before {
                content: "";
                position: absolute;
                top: 0;
                width: $zeb-site-width;
                height: 100%;
                background: inherit;
                right: 100%;
                background-position: right top;
            }
        }
        &-right {
            background-position: right top;
            &:after {
                content: "";
                position: absolute;
                top: 0;
                width: $zeb-site-width;
                height: 100%;
                background: inherit;
                left: 100%;
                background-position: left top;
            }
        }
        /* Make nested column extends overlay each other correctly */
        .bg {
            &--extend {
                z-index: 1;
                &-left, &-right {
                    z-index: 1;
                }
            }
        }
    }
}



@each $value in $zeb-spacings {
    @if $zeb-enable-padding {
        .p {
            &--#{$value} {
                padding: #{$value}px;
            }
            &--t {
                &-#{$value} {
                    padding-top: #{$value}px;
                }
            }
            &--r {
                &-#{$value} {
                    padding-right: #{$value}px;
                }
            }
            &--b {
                &-#{$value} {
                    padding-bottom: #{$value}px;
                }
            }
            &--l {
                &-#{$value} {
                    padding-left: #{$value}px;
                }
            }
            &--x {
                &-#{$value} {
                    padding-left: #{$value}px;
                    padding-right: #{$value}px;
                }
            }
            &--y {
                &-#{$value} {
                    padding-top: #{$value}px;
                    padding-bottom: #{$value}px;
                }
            }
        }
    }
    @if $zeb-enable-margin {
        .m {
            &--#{$value} {
                margin: #{$value}px;
            }
            &--t {
                &-#{$value} {
                    margin-top: #{$value}px;
                }
            }
            &--r {
                &-#{$value} {
                    margin-right: #{$value}px;
                }
            }
            &--b {
                &-#{$value} {
                    margin-bottom: #{$value}px;
                }
            }
            &--l {
                &-#{$value} {
                    margin-left: #{$value}px;
                }
            }
            &--x {
                &-#{$value} {
                    margin-left: #{$value}px;
                    margin-right: #{$value}px;
                }
            }
            &--y {
                &-#{$value} {
                    margin-top: #{$value}px;
                    margin-bottom: #{$value}px;
                }
            }
        }
    }
}
@if $zeb-enable-grids {
    $grid-sub-class: "> *";
    @if $zeb-safe-grid-classes {
        $grid-sub-class: ".grid__col";
    }
    [class*="grid--"] {
        #{$grid-sub-class} {
            display: inline-block;
            vertical-align: top;
        }
    }
    @each $grid-size in $zeb-grid-columns {
        .grid--#{$grid-size} {
            #{$grid-sub-class} {
                width: percentage(1/$grid-size);
            }
        }
    }
}
@if $zeb-enable-gutters {
    @each $value in $zeb-gutter-sizes {
        $half-value: ceil($value / 2);
        .gutters {
            &--#{$value} {
                margin: -#{$half-value}px;
                > * {
                    padding: #{$half-value}px;
                    box-sizing: border-box;;
                }
            }
            &--x {
                &-#{$value} {
                    margin-left: -#{$half-value}px;
                    margin-right: -#{$half-value}px;
                    > * {
                        padding-left: #{$half-value}px;;
                        padding-right: #{$half-value}px;
                        box-sizing: border-box;;
                    }
                }
            }
            &--y {
                &-#{$value} {
                    margin-top: -#{$half-value}px;
                    margin-bottom: -#{$half-value}px;
                    > * {
                        padding-top: #{$half-value}px;
                        padding-bottom: #{$half-value}px;
                        box-sizing: border-box;;
                    }
                }
            }
        }
    }
}


/* REVERSE FUNCTION */
@function reverse($list, $recursive: false) {
    $result: ();
    @for $i from length($list)*-1 through -1 {
        @if type-of(nth($list, abs($i))) == list and $recursive {
            $result: append($result, reverse(nth($list, abs($i)), $recursive));
        } @else {
            $result: append($result, nth($list, abs($i)));
        }
    }
    @return $result;
}
/* RESPONSIVE */
@if $zeb-enable-responsive {
    $zeb-query-property: min-width;
    @if not $zeb-mobile-first {
        $zeb-query-property: max-width;
        $zeb-media-widths: reverse($zeb-media-widths);
        $zeb-media-width-names: reverse($zeb-media-width-names);
    }
    @each $zeb-media-width in $zeb-media-widths {
        @media all and ($zeb-query-property: $zeb-media-width + px) {
            .col {
                $i: index($zeb-media-widths, $zeb-media-width);
                @each $zeb-column-count in $zeb-columns {
                    @for $zeb-span from 1 through $zeb-column-count {
                        &-#{nth($zeb-media-width-names, $i)}--#{$zeb-span}#{$zeb-format--col}#{$zeb-column-count} {
                            width: percentage($zeb-span/$zeb-column-count);
                        }
                    }
                }
            }
            @if $zeb-enable-grids {
                .grid {
                    $i: index($zeb-media-widths, $zeb-media-width);
                    @each $zeb-grid-size in $zeb-grid-columns {
                        &-#{nth($zeb-media-width-names, $i)}--#{$zeb-grid-size} {
                            > * {
                                width: percentage(1/$zeb-grid-size);
                            }
                        }
                    }
                }
            }
            @if $zeb-enable-padding {
                @each $zeb-value in $zeb-spacings {
                    .p {
                        $i: index($zeb-media-widths, $zeb-media-width);
                        &-#{nth($zeb-media-width-names, $i)} {
                            &--#{$zeb-value} {
                                padding: #{$zeb-value}px;
                            }
                            &--t {
                                &-#{$zeb-value} {
                                    padding-top: #{$zeb-value}px;
                                }
                            }
                            &--r {
                                &-#{$zeb-value} {
                                    padding-right: #{$zeb-value}px;
                                }
                            }
                            &--b {
                                &-#{$zeb-value} {
                                    padding-bottom: #{$zeb-value}px;
                                }
                            }
                            &--l {
                                &-#{$zeb-value} {
                                    padding-left: #{$zeb-value}px;
                                }
                            }
                            &--x {
                                &-#{$zeb-value} {
                                    padding-left: #{$zeb-value}px;
                                    padding-right: #{$zeb-value}px;
                                }
                            }
                            &--y {
                                &-#{$zeb-value} {
                                    padding-top: #{$zeb-value}px;
                                    padding-bottom: #{$zeb-value}px;
                                }
                            }
                        }
                    }
                }
            }
            @if $zeb-enable-margin {
                @each $zeb-value in $zeb-spacings {
                    .m {
                        $i: index($zeb-media-widths, $zeb-media-width);
                        &-#{nth($zeb-media-width-names, $i)} {
                            &--#{$zeb-value} {
                                margin: #{$zeb-value}px;
                            }
                            &--t {
                                &-#{$zeb-value} {
                                    margin-top: #{$zeb-value}px;
                                }
                            }
                            &--r {
                                &-#{$zeb-value} {
                                    margin-right: #{$zeb-value}px;
                                }
                            }
                            &--b {
                                &-#{$zeb-value} {
                                    margin-bottom: #{$zeb-value}px;
                                }
                            }
                            &--l {
                                &-#{$zeb-value} {
                                    margin-left: #{$zeb-value}px;
                                }
                            }
                            &--x {
                                &-#{$zeb-value} {
                                    margin-left: #{$zeb-value}px;
                                    margin-right: #{$zeb-value}px;
                                }
                            }
                            &--y {
                                &-#{$zeb-value} {
                                    margin-top: #{$zeb-value}px;
                                    margin-bottom: #{$zeb-value}px;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    @if $zeb-enable-hidden {
        @each $zeb-media-width in $zeb-media-widths {
            $i: index($zeb-media-widths, $zeb-media-width);
            @media all and (max-width: $zeb-media-width + px) {
                .hidden-#{nth($zeb-media-width-names, $i)}--down {
                    display: none;
                }
            }
            @media all and (min-width: $zeb-media-width + px) {
                .hidden-#{nth($zeb-media-width-names, $i)}--up {
                    display: none;
                }
            }
        }
    }
}
