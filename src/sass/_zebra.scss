/*******************/
/* IMPORT SETTINGS */
/*******************/
@import "zebra-settings";





/*************************/
/* RESPONSIVE PROPERTIES */
/*************************/

    // REVERSE FUNCTION (used if Zebra is not set to be mobile first)
    @function reverse($list, $recursive: false) {
        $result: ();
        @for $i from length($list)*-1 through -1 {
            @if type-of(nth($list, abs($i))) == list and $recursive {
                $result: append($result, reverse(nth($list, abs($i)), $recursive));
            } @else {
                $result: append($result, nth($list, abs($i)));
            }
        }
        @return $result;
    }

    // SET MEDIA QUERY PROPERTY FOR MOBILE FIRST
    $zeb-query-property: min-width;

    // OVERWRITE VARIABLES IF NOT MOBILE FIRST
    @if not $zeb-mobile-first {

        // Replace media query property
        $zeb-query-property: max-width;

        // Reverse the list of media query width values
        $zeb-media-widths: reverse($zeb-media-widths);

        // Reverse the list of media query names
        $zeb-media-width-names: reverse($zeb-media-width-names);

    }

/* RESPONSIVE PROPERTIES END */





/*****************/
/* BROWSER RESET */
/*****************/

    @if $zeb-enable-browser-reset {

        // Remove white space from page edges
        body {
            margin: 0;
        }

        // Make images responsive to their containers
        img {
            max-width: 100%;
            height: auto;
            border: 0;
        }

        // Add box-sizing to all elements
        @if $zeb-box-sizing {
            html {
                box-sizing: border-box;
            }
            *, *:before, *:after {
                box-sizing: inherit;
            }
        }

    }

/* BROWSER RESET END */





/******************/
/* HELPER CLASSES */
/******************/

    .site-wrapper {
        display: block;
        max-width: $zeb-site-width;
        margin: 0 auto;
    }

    .clearfix {
        &:after {
            content: "";
            display: block;
            clear: both;
        }
    }

/* HELPER CLASSES END */





/******************/
/* HIDDEN CLASSES */
/******************/

    @if $zeb-enable-hidden {

        .hidden {
            display: none;
        }

        @if $zeb-enable-responsive {

            @each $zeb-media-width in $zeb-media-widths {

                $i: index($zeb-media-widths, $zeb-media-width);

                @media all and (max-width: $zeb-media-width#{$zeb-media-unit}) {
                    .hidden-#{nth($zeb-media-width-names, $i)}--down {
                        display: none;
                    }
                }

                @media all and (min-width: $zeb-media-width#{$zeb-media-unit}) {
                    .hidden-#{nth($zeb-media-width-names, $i)}--up {
                        display: none;
                    }
                }

            }

        }

    }

/* HIDDEN CLASSES END */





/*********************************/
/* ROWS AND ROW MODIFIER CLASSES */
/*********************************/

    .row {
        margin: 0 auto;
        font-size: 0; // This removes the white space between child inline block elements. Be aware that if you have disabled the $zeb-enable-reset-font setting, you will need to manually add font size declarations for all elements or they will inherit the 0 value

        // Stop rows from being wider than the $zeb-site-width value
        &--contained {
            max-width: $zeb-site-width;
        }

        // Flex columns can be used to help line up items
        &--flex {
            display: flex;
            flex-wrap: wrap;
            flex-direction: row;

            // Stretch columns can make use of flex to help fill any remaining gaps
            .col {
                &--stretch {
                    flex: 1 1 auto;
                }
            }
        }

        // Used in conjunction with .row--flex to justify the child columns
        &--justify {
            &-l {
                justify-content: flex-start;
            }

            &-c {
                justify-content: center;
            }

            &-r {
                justify-content: flex-end;
            }
        }

        // Used in conjunction with .row--flex to align the child columns
        &--align {
            &-l {
                align-items: flex-start;
            }

            &-c {
                align-items: center;
            }

            &-r {
                align-items: flex-end;
            }
        }

    }

/* ROWS AND ROW MODIFIER END */





/**********************/
/* COLUMN BASE STYLES */
/**********************/
@for $i from 1 through 9 {
    [class*='col--#{$i}'] {
        display: inline-block;
        vertical-align: top;
        // If enabled, a font size will be applied to columns which will counter the 'font-size: 0' fix that is used on .rows
        // The font size that is applied can be altered in settings
        @if $zeb-enable-reset-font {
            font-size: $zeb-reset-font-size;
        }
    }
}



/************/
/* COLUMNS */
/***********/
.col {
    /* COLUMN SIZES */
    @each $column-count in $zeb-columns {
        @for $span from 1 through $column-count {
            &--#{$span}#{$zeb-format--col}#{$column-count} {
                width: percentage($span/$column-count);
            }
        }
    }
    @if $zeb-enable-offset {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--offset-#{$span}-#{$column-count} {
                    margin-left: percentage($span/$column-count);
                }
            }
        }
    }
    @if $zeb-enable-push {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--push-#{$span}-#{$column-count} {
                    position: relative;
                    left: percentage($span/$column-count);
                }
            }
        }
    }
    @if $zeb-enable-pull {
        @each $column-count in $zeb-columns {
            @for $span from 1 through $column-count {
                &--pull-#{$span}-#{$column-count} {
                    position: relative;
                    right: percentage($span/$column-count);
                }
            }
        }
    }
    &--auto {
        position: relative;
        display: inline-block;
        vertical-align: top;
        width: auto;
        @if $zeb-enable-reset-font {
            font-size: $zeb-reset-font-size;
        }
    }
    /* COLUMN MODIFIERS */
    &--left {
        float: left;
    }
    &--right {
        float: right;
    }
    &--flex {
        &-col {
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            > * {
                flex-grow: 1;
            }
            > .row {
                margin: 0;
            }
        }
        &-row {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            > * {
                flex-grow: 1;
            }
        }
    }
    &--align {
        &-top {
            vertical-align: top;
        }
        &-middle {
            vertical-align: middle;
        }
        &-bottom {
            vertical-align: bottom;
        }
    }
}

.bg {
    &--extend {
        position: relative;
        &:before, &:after {
            content: "";
            position: absolute;
            top: 0;
            width: $zeb-site-width;
            height: 100%;
            background: inherit;
        }
        &:before {
            right: 100%;
        }
        &:after {
            left: 100%;
        }
        &-left, &-right {
            position: relative;
        }
        &-left {
            background-position: left top;
            &:before {
                content: "";
                position: absolute;
                top: 0;
                width: $zeb-site-width;
                height: 100%;
                background: inherit;
                right: 100%;
                background-position: right top;
            }
        }
        &-right {
            background-position: right top;
            &:after {
                content: "";
                position: absolute;
                top: 0;
                width: $zeb-site-width;
                height: 100%;
                background: inherit;
                left: 100%;
                background-position: left top;
            }
        }
        /* Make nested column extends overlay each other correctly */
        .bg {
            &--extend {
                z-index: 1;
                &-left, &-right {
                    z-index: 1;
                }
            }
        }
    }
}



@each $value in $zeb-spacings {
    @if $zeb-enable-padding {
        .p {
            &--#{$value} {
                padding: $value#{$zeb-spacing-unit};
            }
            &--t {
                &-#{$value} {
                    padding-top: $value#{$zeb-spacing-unit};
                }
            }
            &--r {
                &-#{$value} {
                    padding-right: $value#{$zeb-spacing-unit};
                }
            }
            &--b {
                &-#{$value} {
                    padding-bottom: $value#{$zeb-spacing-unit};
                }
            }
            &--l {
                &-#{$value} {
                    padding-left: $value#{$zeb-spacing-unit};
                }
            }
            &--x {
                &-#{$value} {
                    padding-left: $value#{$zeb-spacing-unit};
                    padding-right: $value#{$zeb-spacing-unit};
                }
            }
            &--y {
                &-#{$value} {
                    padding-top: $value#{$zeb-spacing-unit};
                    padding-bottom: $value#{$zeb-spacing-unit};
                }
            }
        }
    }
    @if $zeb-enable-margin {
        .m {
            &--#{$value} {
                margin: $value#{$zeb-spacing-unit};
            }
            &--t {
                &-#{$value} {
                    margin-top: $value#{$zeb-spacing-unit};
                }
            }
            &--r {
                &-#{$value} {
                    margin-right: $value#{$zeb-spacing-unit};
                }
            }
            &--b {
                &-#{$value} {
                    margin-bottom: $value#{$zeb-spacing-unit};
                }
            }
            &--l {
                &-#{$value} {
                    margin-left: $value#{$zeb-spacing-unit};
                }
            }
            &--x {
                &-#{$value} {
                    margin-left: $value#{$zeb-spacing-unit};
                    margin-right: $value#{$zeb-spacing-unit};
                }
            }
            &--y {
                &-#{$value} {
                    margin-top: $value#{$zeb-spacing-unit};
                    margin-bottom: $value#{$zeb-spacing-unit};
                }
            }
        }
    }
}




@if $zeb-enable-grids {
    $grid-sub-class: "> *";
    @if $zeb-safe-grid-classes {
        $grid-sub-class: ".grid__col";
    }
    [class*="grid--"] {
        #{$grid-sub-class} {
            display: inline-block;
            vertical-align: top;
        }
    }
    @each $grid-size in $zeb-grid-columns {
        .grid--#{$grid-size} {
            #{$grid-sub-class} {
                width: percentage(1/$grid-size);
            }
        }
    }
}
@if $zeb-enable-gutters {
    @each $value in $zeb-gutter-sizes {
        $half-value: ceil($value / 2);
        .gutters {
            &--#{$value} {
                margin: -#{$half-value}px;
                > * {
                    padding: #{$half-value}px;
                    box-sizing: border-box;;
                }
            }
            &--x {
                &-#{$value} {
                    margin-left: -#{$half-value}px;
                    margin-right: -#{$half-value}px;
                    > * {
                        padding-left: #{$half-value}px;;
                        padding-right: #{$half-value}px;
                        box-sizing: border-box;;
                    }
                }
            }
            &--y {
                &-#{$value} {
                    margin-top: -#{$half-value}px;
                    margin-bottom: -#{$half-value}px;
                    > * {
                        padding-top: #{$half-value}px;
                        padding-bottom: #{$half-value}px;
                        box-sizing: border-box;;
                    }
                }
            }
        }
    }
}



/* RESPONSIVE */
@if $zeb-enable-responsive {
    $zeb-query-property: min-width;
    @if not $zeb-mobile-first {
        $zeb-query-property: max-width;
        $zeb-media-widths: reverse($zeb-media-widths);
        $zeb-media-width-names: reverse($zeb-media-width-names);
    }
    @each $zeb-media-width in $zeb-media-widths {
        @media all and ($zeb-query-property: $zeb-media-width + $zeb-media-unit) {
            .col {
                $i: index($zeb-media-widths, $zeb-media-width);
                @each $zeb-column-count in $zeb-columns {
                    @for $zeb-span from 1 through $zeb-column-count {
                        &-#{nth($zeb-media-width-names, $i)}--#{$zeb-span}#{$zeb-format--col}#{$zeb-column-count} {
                            width: percentage($zeb-span/$zeb-column-count);
                        }
                    }
                }
            }
            @if $zeb-enable-grids {
                .grid {
                    $i: index($zeb-media-widths, $zeb-media-width);
                    @each $zeb-grid-size in $zeb-grid-columns {
                        &-#{nth($zeb-media-width-names, $i)}--#{$zeb-grid-size} {
                            > * {
                                width: percentage(1/$zeb-grid-size);
                            }
                        }
                    }
                }
            }
            @if $zeb-enable-padding {
                @each $zeb-value in $zeb-spacings {
                    .p {
                        $i: index($zeb-media-widths, $zeb-media-width);
                        &-#{nth($zeb-media-width-names, $i)} {
                            &--#{$zeb-value} {
                                padding: $zeb-value#{$zeb-spacing-unit};
                            }
                            &--t {
                                &-#{$zeb-value} {
                                    padding-top: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--r {
                                &-#{$zeb-value} {
                                    padding-right: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--b {
                                &-#{$zeb-value} {
                                    padding-bottom: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--l {
                                &-#{$zeb-value} {
                                    padding-left: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--x {
                                &-#{$zeb-value} {
                                    padding-left: $zeb-value#{$zeb-spacing-unit};
                                    padding-right: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--y {
                                &-#{$zeb-value} {
                                    padding-top: $zeb-value#{$zeb-spacing-unit};
                                    padding-bottom: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                        }
                    }
                }
            }
            @if $zeb-enable-margin {
                @each $zeb-value in $zeb-spacings {
                    .m {
                        $i: index($zeb-media-widths, $zeb-media-width);
                        &-#{nth($zeb-media-width-names, $i)} {
                            &--#{$zeb-value} {
                                margin: #{$zeb-value}px;
                            }
                            &--t {
                                &-#{$zeb-value} {
                                    margin-top: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--r {
                                &-#{$zeb-value} {
                                    margin-right: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--b {
                                &-#{$zeb-value} {
                                    margin-bottom: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--l {
                                &-#{$zeb-value} {
                                    margin-left: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--x {
                                &-#{$zeb-value} {
                                    margin-left: $zeb-value#{$zeb-spacing-unit};
                                    margin-right: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                            &--y {
                                &-#{$zeb-value} {
                                    margin-top: $zeb-value#{$zeb-spacing-unit};
                                    margin-bottom: $zeb-value#{$zeb-spacing-unit};
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
